// Generated by CoffeeScript 1.6.3
$(document).ready(function() {
  _ca = new PlasmidLL($("#sandbox"));
  _dragging = false;
  var bind, pause, play, toggle;
  toggle = function(cell) {
    var col, row, val;
    col = cell.index() + 1;
    row = cell.parent().index() + 1;
    val = _ca.cells[row][col];
    _ca.cells[row][col] = +(!val);
    return _ca.render();
  };
  bind = function() {
    var cells;
    cells = $("#sandbox").children().children();
    cells.mousedown(function() {
      _dragging = true;
      return toggle($(this));
    });
    cells.mouseup(function() {
      return _dragging = false;
    });
    return cells.mouseover(function() {
      if (_dragging) {
        return toggle($(this));
      }
    });
  };
  bind();
  play = function() {
    _ca.propagate();
    return _timer = setTimeout(play, 100);
  };
  pause = function() {
    return clearTimeout(_timer);
  };
  $("#sandbox-toggle").click(function() {
    var icon, now, to;
    now = $(this).data("toggle");
    to = now === "play" ? "pause" : "play";
    icon = $($(this).children()[0]);
    icon.removeClass("glyphicon-" + now).addClass("glyphicon-" + to);
    $(this).data("toggle", to);
    if (now === "play") {
      return play();
    } else {
      return pause();
    }
  });
  $("#sandbox-step").click(function() {
    return _ca.propagate();
  });
  $("#sandbox-refresh").click(function() {
    _ca.refresh();
    return bind();
  });
  $("#sandbox-random").click(function() {
    var col, i, row, total, _i;
    total = _ca.int(_ca.row * _ca.col / 4);
    for (i = _i = 0; _i < total; i = _i += 1) {
      row = _ca.int(_ca.rand() * _ca.row) + 1;
      col = _ca.int(_ca.rand() * _ca.col) + 1;
      _ca.cells[row][col] = 1;
    }
    return _ca.render();
  });
  return $(".sandbox-rule").click(function() {
    var rule, sandbox;
    rule = $(this).text();
    sandbox = $("#sandbox");
    sandbox.data("rule", rule);
    sandbox.attr("data-rule", rule);
    _ca = new PlasmidLL($("#sandbox"));
    return bind();
  });
});
